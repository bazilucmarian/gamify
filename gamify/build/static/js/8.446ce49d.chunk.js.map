{"version":3,"sources":["assets/imgs/Empty.svg","assets/imgs/no-image.png","components/empty-placeholder.js","constants/messages.js","components/button-container-admin.js","components/challenges-section.js","components/button-container-user.js","components/challenge-card.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/react/useMutation.js","hooks/mutations/use-status-change-mutation.js","utils/invalidate-query-handler.js","components/pagination.js","pages/user-pages/challenges-page.js","hooks/queries/use-available-challenges.js"],"names":["EmptyPlaceholder","message","pathRedirect","image","history","useHistory","className","src","alt","color","variant","size","onClick","push","NoImage","defaultProps","Empty","emptyMessage","overviewPage","challengesPage","shopPage","shopPageAdmin","validationPage","welcome","notFound","ButtonContainerAdmin","status","onValidate","onUpdateItem","statusDictionary","denied","validated","PropTypes","func","ChallengesSection","title","isScrollable","hasData","children","Boolean","ButtonsContainerUser","inProgress","available","inPending","disabled","ChallengeCard","isAdmin","challenge","onChangeStatus","onUpdateChallenge","camelCaseToKebabCase","userName","jobTitle","profilePicture","xp","credits","description","MutationObserver","_Subscribable","client","options","_this","call","this","setOptions","bindMethods","updateResult","_inheritsLoose","_proto","prototype","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","_this$currentMutation","listeners","length","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","undefined","variables","mutateOptions","getMutationCache","build","_extends","addObserver","execute","state","getDefaultState","isLoading","isSuccess","isError","isIdle","_this2","notifyManager","batch","data","context","onSettled","error","forEach","listener","Subscribable","useMutation","arg1","arg2","arg3","mountedRef","React","useRef","forceUpdate","useState","parseMutationArgs","queryClient","useQueryClient","obsRef","current","useEffect","unsubscribe","subscribe","batchCalls","x","useCallback","catch","noop","useErrorBoundary","mutateAsync","useStatusChangeMutation","user","a","challengeId","userId","newStatus","api","put","getJWTHeader","invalidateQueries","queryKeys","availableChallenges","progressOrCompletedChallenges","refetchInactive","validationChallenges","invalidateQueryHandler","toast","success","response","Pagination","page","itemsLength","path","nrPages","Math","ceil","totalProducts","to","ChallengesPage","location","useLocation","currentPage","Number","URLSearchParams","search","get","handleChangeStatus","changeStatusHandler","id","useQuery","keepPreviousData","useAvailableChallenges","availableChallengesData","loadingGetAvailableChallenges","isErrorGetAvailableChallenges","challenges","map","totalAvailable"],"mappings":"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","file":"static/js/8.446ce49d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Empty.7e4b6dae.svg\";","export default __webpack_public_path__ + \"static/media/no-image.0b19f0b7.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport Empty from '../assets/imgs/Empty.svg';\r\nimport NoImage from '../assets/imgs/no-image.png';\r\n\r\nimport Button from './button';\r\n\r\nfunction EmptyPlaceholder({message, pathRedirect, image}) {\r\n  const history = useHistory();\r\n\r\n  const handleRedirect = () => {\r\n    history.push(pathRedirect);\r\n  };\r\n\r\n  if (!message) {\r\n    return <img className=\"empty-placeholder__not-available\" src={NoImage} alt=\"placeholder\" />;\r\n  }\r\n  return (\r\n    <div className=\"empty-placeholder\">\r\n      <div className=\"empty-placeholder__content\">\r\n        <img className=\"empty-placeholder__image\" src={image} alt=\"placeholder-img\" />\r\n        <p className=\"empty-placeholder__message\">{message}</p>\r\n        {pathRedirect && (\r\n          <Button color=\"secondary\" variant=\"outlined-secondary\" size=\"lg\" onClick={handleRedirect}>\r\n            Go to available challenges ➡\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEmptyPlaceholder.propTypes = {\r\n  message: PropTypes.string,\r\n  pathRedirect: PropTypes.string,\r\n  image: PropTypes.string\r\n};\r\nEmptyPlaceholder.defaultProps = {\r\n  message: '',\r\n  pathRedirect: '',\r\n  image: Empty\r\n};\r\n\r\nexport default EmptyPlaceholder;\r\n","export const emptyMessage = {\r\n  overviewPage: 'Sorry... You have no challenge in progress or completed 😔',\r\n  challengesPage: 'Sorry... You have no challenge available 😔',\r\n  shopPage: 'Sorry... You have no challenge available 😔',\r\n  shopPageAdmin: 'Oups...you have to add some products, for that press add new button',\r\n  validationPage: 'Oups... you have no challenge to validate.',\r\n  welcome: 'Welcome to Gamify',\r\n  notFound: 'Page not found 😓'\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {statusDictionary} from '../utils';\r\n\r\nimport Button from './button';\r\n\r\nfunction ButtonContainerAdmin({status, onValidate, onUpdateItem}) {\r\n  return status === 'inPending' ? (\r\n    <>\r\n      <Button color=\"fourth\" variant=\"outlined-fourth\" size=\"sm\" onClick={() => onValidate(statusDictionary.denied)}>\r\n        Deny\r\n      </Button>\r\n      <Button\r\n        color=\"tertiary\"\r\n        variant=\"contained-tertiary\"\r\n        size=\"md\"\r\n        onClick={() => onValidate(statusDictionary.validated)}\r\n      >\r\n        Validate\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <Button color=\"secondary\" variant=\"outlined-secondary\" size=\"sm\" onClick={() => onUpdateItem('DELETE')}>\r\n        Delete\r\n      </Button>\r\n      <Button color=\"secondary\" variant=\"contained-secondary\" size=\"md\" onClick={() => onUpdateItem('EDIT')}>\r\n        Edit\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nButtonContainerAdmin.propTypes = {\r\n  status: PropTypes.string,\r\n  onValidate: PropTypes.func,\r\n  onUpdateItem: PropTypes.func\r\n};\r\n\r\nButtonContainerAdmin.defaultProps = {\r\n  onValidate: PropTypes.func,\r\n  onUpdateItem: PropTypes.func,\r\n  status: ''\r\n};\r\nexport default ButtonContainerAdmin;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ChallengesSection({title, isScrollable, hasData, children}) {\r\n  return (\r\n    Boolean(hasData) && (\r\n      <section className=\"challenges-section\">\r\n        <h2 className=\"challenges-section__title\">{title}</h2>\r\n        <div className={`challenges-section__items challenges-section__items--${isScrollable && 'scrollable'}`}>\r\n          {children}\r\n        </div>\r\n      </section>\r\n    )\r\n  );\r\n}\r\n\r\nChallengesSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  isScrollable: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n  hasData: PropTypes.number.isRequired\r\n};\r\n\r\nChallengesSection.defaultProps = {\r\n  isScrollable: false\r\n};\r\n\r\nexport default ChallengesSection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {statusDictionary} from '../utils';\r\n\r\nimport Button from './button';\r\n\r\nfunction ButtonsContainerUser({status, onClick}) {\r\n  switch (status) {\r\n    case statusDictionary.inProgress:\r\n      return (\r\n        <>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"outlined-secondary\"\r\n            size=\"sm\"\r\n            onClick={() => onClick(statusDictionary.available)}\r\n          >\r\n            Quit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained-secondary\"\r\n            size=\"md\"\r\n            onClick={() => onClick(statusDictionary.inPending)}\r\n          >\r\n            Complete\r\n          </Button>\r\n        </>\r\n      );\r\n\r\n    case statusDictionary.inPending:\r\n      return (\r\n        <Button size=\"lg\" disabled>\r\n          Pending ...\r\n        </Button>\r\n      );\r\n\r\n    case statusDictionary.validated:\r\n      return (\r\n        <Button color=\"tertiary\" size=\"lg\" disabled>\r\n          Validated\r\n        </Button>\r\n      );\r\n\r\n    case statusDictionary.denied:\r\n      return (\r\n        <Button color=\"fourth\" size=\"lg\" disabled>\r\n          Denied\r\n        </Button>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained-secondary\"\r\n          size=\"lg\"\r\n          onClick={() => onClick(statusDictionary.inProgress)}\r\n        >\r\n          Enroll\r\n        </Button>\r\n      );\r\n  }\r\n}\r\n\r\nButtonsContainerUser.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ButtonsContainerUser;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {camelCaseToKebabCase} from '../utils';\r\nimport {statusDictionary} from '../mocks/fixtures';\r\n\r\nimport ButtonContainerAdmin from './button-container-admin';\r\nimport ButtonsContainerUser from './button-container-user';\r\nimport RewardInfo from './reward-info';\r\nimport UserCard from './user-card';\r\n\r\nfunction ChallengeCard({isAdmin, challenge, onChangeStatus, onUpdateChallenge}) {\r\n  const {status} = challenge;\r\n\r\n  return (\r\n    <div\r\n      className={`challenge-card challenge-card--${camelCaseToKebabCase(status)} challenge-card--${\r\n        isAdmin && status === statusDictionary.inPending && 'validation'\r\n      }`}\r\n    >\r\n      <div\r\n        className={`challenge-card__content challenge-card__content--${\r\n          isAdmin && status === statusDictionary.inPending && 'extend'\r\n        }`}\r\n      >\r\n        {isAdmin && status === statusDictionary.inPending && (\r\n          <div>\r\n            <UserCard userName={challenge.userName} jobTitle={challenge.jobTitle} image={challenge.profilePicture} />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"challenge-card__top\">\r\n          <div className=\"challenge-card__title\">{challenge.title}</div>\r\n          <RewardInfo xp={challenge.xp} credits={challenge.credits} />\r\n        </div>\r\n        <div className=\"challenge-card__middle\">\r\n          <p className=\"challenge-card__description\">{challenge.description}</p>\r\n        </div>\r\n\r\n        <div className=\"challenge-card__bottom\">\r\n          {isAdmin ? (\r\n            <ButtonContainerAdmin status={status} onValidate={onChangeStatus} onUpdateItem={onUpdateChallenge} />\r\n          ) : (\r\n            <ButtonsContainerUser status={status} onClick={onChangeStatus} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nChallengeCard.propTypes = {\r\n  onChangeStatus: PropTypes.func,\r\n  onUpdateChallenge: PropTypes.func,\r\n  challenge: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    credits: PropTypes.number,\r\n    status: PropTypes.string,\r\n    jobTitle: PropTypes.string,\r\n    userName: PropTypes.string,\r\n    profilePicture: PropTypes.string,\r\n    id: PropTypes.string,\r\n    xp: PropTypes.number\r\n  }).isRequired,\r\n  isAdmin: PropTypes.bool\r\n};\r\nChallengeCard.defaultProps = {\r\n  onChangeStatus: () => {},\r\n  onUpdateChallenge: () => {},\r\n  isAdmin: false\r\n};\r\nexport default ChallengeCard;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import {useMutation, useQueryClient} from 'react-query';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport {getJWTHeader} from '../../axios-instance';\r\nimport api from '../../components/api';\r\nimport {invalidateQueryHandler} from '../../utils/invalidate-query-handler';\r\n\r\nconst useStatusChangeMutation = user => {\r\n  const queryClient = useQueryClient();\r\n\r\n  async function handleChangeStatusCall({challengeId, userId, newStatus}) {\r\n    try {\r\n      return await api.put(\r\n        `/api/user-challenges/${challengeId}/${userId}?newStatus=${newStatus}`,\r\n        null,\r\n        getJWTHeader(user)\r\n      );\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  return useMutation(handleChangeStatusCall, {\r\n    onSuccess: ({message}, {newStatus}) => {\r\n      invalidateQueryHandler(newStatus, queryClient);\r\n      toast.success(message);\r\n    },\r\n    onError: error => {\r\n      toast.error(error.response.data.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport default useStatusChangeMutation;\r\n","import {queryKeys} from '../react-query/constants';\r\n\r\nimport {statusDictionary} from './status-dictionary';\r\n\r\nexport const invalidateQueryHandler = (status, queryClient) => {\r\n  switch (status) {\r\n    case statusDictionary.inProgress:\r\n      queryClient.invalidateQueries(queryKeys.availableChallenges);\r\n      queryClient.invalidateQueries(queryKeys.progressOrCompletedChallenges, {refetchInactive: true});\r\n      break;\r\n    case statusDictionary.available:\r\n      queryClient.invalidateQueries(queryKeys.progressOrCompletedChallenges);\r\n      queryClient.invalidateQueries(queryKeys.availableChallenges, {refetchInactive: true});\r\n      break;\r\n\r\n    case statusDictionary.inPending:\r\n      queryClient.invalidateQueries(queryKeys.progressOrCompletedChallenges);\r\n      queryClient.invalidateQueries(queryKeys.validationChallenges, {refetchInactive: true});\r\n      break;\r\n\r\n    case statusDictionary.validated:\r\n    case statusDictionary.denied:\r\n      queryClient.invalidateQueries(queryKeys.validationChallenges);\r\n      queryClient.invalidateQueries(queryKeys.progressOrCompletedChallenges, {refetchInactive: true});\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nfunction Pagination({page, itemsLength, path}) {\r\n  const history = useHistory();\r\n  const nrPages = Math.ceil(itemsLength / 6);\r\n  const totalProducts = itemsLength;\r\n\r\n  useEffect(() => {\r\n    if (page < 1) {\r\n      history.push(`${path}?page=1`);\r\n    } else if (page > nrPages) {\r\n      history.push(`${path}?page=${nrPages}`);\r\n    }\r\n  }, [history, nrPages, page, path]);\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <Link to={`${path}?page=${page - 1}`} className={page <= 1 ? 'link-disabled' : ''}>\r\n        ⬅Prev\r\n      </Link>\r\n      <p>\r\n        Page {page} of {nrPages}{' '}\r\n      </p>\r\n      <p>{totalProducts} Products Total</p>\r\n      <Link to={`${path}?page=${page + 1}`} className={page >= nrPages ? 'link-disabled' : ''}>\r\n        Next➡\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  itemsLength: PropTypes.number.isRequired,\r\n  path: PropTypes.string.isRequired\r\n};\r\nexport default Pagination;\r\n","import PropTypes from 'prop-types';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport ChallengesSection from '../../components/challenges-section';\r\nimport useAvailableChallenges from '../../hooks/queries/use-available-challenges';\r\nimport useStatusChangeMutation from '../../hooks/mutations/use-status-change-mutation';\r\nimport EmptyPlaceholder from '../../components/empty-placeholder';\r\nimport Pagination from '../../components/pagination';\r\nimport ChallengeCard from '../../components/challenge-card';\r\nimport {emptyMessage} from '../../constants/messages';\r\n\r\nfunction ChallengesPage({user}) {\r\n  const location = useLocation();\r\n  const currentPage = Number(new URLSearchParams(location.search).get('page'));\r\n\r\n  // mutation\r\n  const {mutate: handleChangeStatus} = useStatusChangeMutation(user);\r\n  const changeStatusHandler = challenge => newStatus => {\r\n    handleChangeStatus({challengeId: challenge.id, userId: challenge.userId, newStatus});\r\n  };\r\n\r\n  // query\r\n  const {\r\n    data: availableChallengesData,\r\n    isLoading: loadingGetAvailableChallenges,\r\n    isError: isErrorGetAvailableChallenges,\r\n    error\r\n  } = useAvailableChallenges(user, currentPage);\r\n\r\n  if (loadingGetAvailableChallenges) {\r\n    return null;\r\n  }\r\n\r\n  if (isErrorGetAvailableChallenges) {\r\n    return <EmptyPlaceholder message={error.response.data.message} />;\r\n  }\r\n  if (!availableChallengesData.challenges.length) {\r\n    return <EmptyPlaceholder message={emptyMessage.challengesPage} />;\r\n  }\r\n  return (\r\n    <>\r\n      <ChallengesSection title=\"Available Challenges\" hasData={availableChallengesData.challenges.length}>\r\n        {availableChallengesData.challenges.map(challenge => (\r\n          <ChallengeCard key={challenge.id} challenge={challenge} onChangeStatus={changeStatusHandler(challenge)} />\r\n        ))}\r\n      </ChallengesSection>\r\n      <Pagination page={currentPage} itemsLength={availableChallengesData.totalAvailable} path=\"/challenges\" />\r\n    </>\r\n  );\r\n}\r\n\r\nChallengesPage.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ChallengesPage;\r\n","/* eslint-disable no-return-await */\r\nimport {useQuery} from 'react-query';\r\n\r\nimport {getJWTHeader} from '../../axios-instance';\r\nimport api from '../../components/api';\r\nimport {queryKeys} from '../../react-query/constants';\r\n\r\nconst limit = 6;\r\nexport default function useAvailableChallenges(user, currentPage) {\r\n  async function getAvailableChallenges() {\r\n    return await api.get(`/api/user-challenges/available?_page=${currentPage}&_limit=${limit}`, getJWTHeader(user));\r\n  }\r\n\r\n  return useQuery([queryKeys.availableChallenges, currentPage], getAvailableChallenges, {\r\n    keepPreviousData: true\r\n  });\r\n}\r\n"],"sourceRoot":""}