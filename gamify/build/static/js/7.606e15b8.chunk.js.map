{"version":3,"sources":["assets/imgs/Empty.svg","assets/imgs/no-image.png","components/empty-placeholder.js","constants/messages.js","components/button-container-admin.js","hooks/use-form.js","components/input.js","components/challenges-section.js","components/button-container-user.js","components/challenge-card.js","components/pagination.js","utils/form-rules-challenges.js","constants/form-challenges.js","components/add-or-edit-form.js","components/challenges-modal.js","hooks/mutations/use-create-challenge-mutation.js","hooks/mutations/use-edit-challenge-mutation.js","hooks/mutations/use-delete-challenge-mutation.js","pages/admin-pages/challenges-page-admin.js","hooks/queries/use-all-challenges.js"],"names":["EmptyPlaceholder","message","pathRedirect","image","history","useHistory","className","src","alt","color","variant","size","onClick","push","NoImage","defaultProps","Empty","emptyMessage","overviewPage","challengesPage","shopPage","shopPageAdmin","validationPage","welcome","notFound","ButtonContainerAdmin","status","onValidate","onUpdateItem","statusDictionary","denied","validated","PropTypes","func","useForm","initialState","currentState","onSubmitCallback","validate","useState","fields","setFields","errors","setErrors","isSubmitting","setIsSubmitting","resetForm","useCallback","useEffect","Object","keys","length","handleChange","e","fieldName","fieldValue","value","target","id","type","Number","prevState","handleSubmit","preventDefault","Input","inputId","inputType","inputValue","inputOnChange","inputLabel","error","isRequired","multiple","onDone","base64","file","url","name","htmlFor","onChange","required","placeholder","ChallengesSection","title","isScrollable","hasData","children","Boolean","ButtonsContainerUser","inProgress","available","inPending","disabled","ChallengeCard","isAdmin","challenge","onChangeStatus","onUpdateChallenge","camelCaseToKebabCase","userName","jobTitle","profilePicture","xp","credits","description","Pagination","page","itemsLength","path","nrPages","Math","ceil","totalProducts","to","validateChallengesForm","trim","match","Form","closeModal","isEditing","onSubmit","emptyState","ChallengesModal","isOpen","hide","currentChallenge","handleAddNewChallenge","handleEditChallenge","handler","Header","Body","addNewChallenge","useCreateChallengeMutation","user","queryClient","useQueryClient","challengeData","a","api","post","getJWTHeader","useMutation","onSuccess","data","invalidateQueries","queryKeys","allChallenges","toast","success","useEditChallengeMutation","put","onError","response","useDeleteChallengeMutation","delete","ChallengesPageAdmin","useModal","hideModal","showModal","setCurrentChallenge","location","useLocation","currentPage","URLSearchParams","search","get","useQuery","keepPreviousData","useAllChallenges","isLoadingGetChallenges","isLoading","isErrorGetChallenges","isError","mutate","isLoadingCreateChallenge","isLoadingEditChallenge","handleDeleteChallenge","handleUpdateChallenge","operation","totalAvailable","map"],"mappings":"sIAAe,MAA0B,kCCA1B,MAA0B,qC,eCSzC,SAASA,EAAT,GAA2D,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,MAC1CC,EAAUC,cAMhB,OAAKJ,EAIH,qBAAKK,UAAU,oBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,2BAA2BC,IAAKJ,EAAOK,IAAI,oBAC1D,mBAAGF,UAAU,6BAAb,SAA2CL,IAC1CC,GACC,cAAC,IAAD,CAAQO,MAAM,YAAYC,QAAQ,qBAAqBC,KAAK,KAAKC,QAblD,WACrBR,EAAQS,KAAKX,IAYP,oDARC,qBAAKI,UAAU,mCAAmCC,IAAKO,EAASN,IAAI,gBAsB/ER,EAAiBe,aAAe,CAC9Bd,QAAS,GACTC,aAAc,GACdC,MAAOa,GAGMhB,O,iCC7Cf,kCAAO,IAAMiB,EAAe,CAC1BC,aAAc,uEACdC,eAAgB,wDAChBC,SAAU,wDACVC,cAAe,sEACfC,eAAgB,6CAChBC,QAAS,oBACTC,SAAU,gC,iCCPZ,iDAOA,SAASC,EAAT,GAAmE,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aACjD,MAAkB,cAAXF,EACL,qCACE,cAAC,IAAD,CAAQjB,MAAM,SAASC,QAAQ,kBAAkBC,KAAK,KAAKC,QAAS,kBAAMe,EAAWE,IAAiBC,SAAtG,kBAGA,cAAC,IAAD,CACErB,MAAM,WACNC,QAAQ,qBACRC,KAAK,KACLC,QAAS,kBAAMe,EAAWE,IAAiBE,YAJ7C,yBAUF,qCACE,cAAC,IAAD,CAAQtB,MAAM,YAAYC,QAAQ,qBAAqBC,KAAK,KAAKC,QAAS,kBAAMgB,EAAa,WAA7F,oBAGA,cAAC,IAAD,CAAQnB,MAAM,YAAYC,QAAQ,sBAAsBC,KAAK,KAAKC,QAAS,kBAAMgB,EAAa,SAA9F,qBAaNH,EAAqBV,aAAe,CAClCY,WAAYK,IAAUC,KACtBL,aAAcI,IAAUC,KACxBP,OAAQ,IAEKD,O,qGC3CFS,EAAU,SAACC,EAAcC,EAAcC,EAAkBC,GACpE,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAYC,uBAAY,WAC5BN,EAAUN,KACT,CAACA,IAEJa,qBAAU,YACHC,OAAOC,KAAKR,GAAQS,QAAUP,IACjCP,EAAiBG,GACjBM,IACAD,GAAgB,MAEjB,CAACH,EAAQF,EAAQI,EAAcP,EAAkBS,IAEpDE,qBAAU,WACRP,EAAUL,KACT,CAACA,IAEJ,IAAMgB,EAAeL,uBAAY,SAACM,EAAGC,EAAWC,GAC9C,IAAKC,EAASH,EAAEI,OAAXD,MACL,EAAmBH,EAAEI,OAAdC,EAAP,EAAOA,GAEM,WAFb,EAAWC,OAGTH,EAAQI,OAAOJ,IAEjBf,GAAU,SAAAoB,GAAS,kCACdA,GADc,kBAEhBH,EAAKF,GACFF,GAAS,eAAMA,EAAYC,SAEhC,IAEGO,EAAef,uBACnB,SAAAM,GACEA,EAAEU,iBACFlB,GAAgB,GAChBF,EAAUL,EAASE,MAErB,CAACA,EAAQF,IAGX,MAAO,CACLE,SACAY,eACAN,YACAgB,eACApB,Y,4EC/CJ,SAASsB,EAAT,GAA2G,IAA3FC,EAA0F,EAA1FA,QAASC,EAAiF,EAAjFA,UAAWC,EAAsE,EAAtEA,WAAYC,EAA0D,EAA1DA,cAAeC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,WAAYjE,EAAY,EAAZA,UAC5F,OACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,aAAf,SACiB,SAAd4D,EACC,qCACE,cAAC,IAAD,CACEP,KAAK,OACLa,UAAU,EACVC,OAAQ,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,KAAV,OACNP,EAAc,iBAAD,YAAC,eACTD,GADQ,IAEXS,IAAKF,EACLC,KAAMA,EAAKE,WAIjB,uBAAOvE,UAAU,mBAAmBwE,QAASb,EAA7C,SACE,+BAAOI,MAET,sBAAM/D,UAAU,yBAAhB,SAA0C6D,EAAWQ,UAGvD,qCACE,uBACErE,UAAS,4BAAuBA,GAChCoD,GAAIO,EACJN,KAAMO,EACNV,MAAOW,EACPY,SAAUX,EACVY,SAAUT,EACVU,YAAY,gBAEd,uBAAO3E,UAAU,oBAAoBwE,QAASb,EAA9C,SACE,sBAAM3D,UAAU,UAAhB,SAA2B+D,WAKlCC,GAAS,sBAAMhE,UAAU,oBAAhB,SAAqCgE,OAgBrDN,EAAMjD,aAAe,CACnBuD,MAAO,GACPH,WAAY,GACZ7D,UAAW,GACXiE,YAAY,GAGCP,O,iCClEf,gBAGA,SAASkB,EAAT,GAAsE,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SACxD,OACEC,QAAQF,IACN,0BAAS/E,UAAU,qBAAnB,UACE,oBAAIA,UAAU,4BAAd,SAA2C6E,IAC3C,qBAAK7E,UAAS,+DAA0D8E,GAAgB,cAAxF,SACGE,OAcXJ,EAAkBnE,aAAe,CAC/BqE,cAAc,GAGDF,O,kFC4CAM,MAhEf,YAAkD,IAAnB9D,EAAkB,EAAlBA,OAAQd,EAAU,EAAVA,QACrC,OAAQc,GACN,KAAKG,IAAiB4D,WACpB,OACE,qCACE,cAAC,IAAD,CACEhF,MAAM,YACNC,QAAQ,qBACRC,KAAK,KACLC,QAAS,kBAAMA,EAAQiB,IAAiB6D,YAJ1C,kBAQA,cAAC,IAAD,CACEjF,MAAM,YACNC,QAAQ,sBACRC,KAAK,KACLC,QAAS,kBAAMA,EAAQiB,IAAiB8D,YAJ1C,yBAWN,KAAK9D,IAAiB8D,UACpB,OACE,cAAC,IAAD,CAAQhF,KAAK,KAAKiF,UAAQ,EAA1B,yBAKJ,KAAK/D,IAAiBE,UACpB,OACE,cAAC,IAAD,CAAQtB,MAAM,WAAWE,KAAK,KAAKiF,UAAQ,EAA3C,uBAKJ,KAAK/D,IAAiBC,OACpB,OACE,cAAC,IAAD,CAAQrB,MAAM,SAASE,KAAK,KAAKiF,UAAQ,EAAzC,oBAKJ,QACE,OACE,cAAC,IAAD,CACEnF,MAAM,YACNC,QAAQ,sBACRC,KAAK,KACLC,QAAS,kBAAMA,EAAQiB,IAAiB4D,aAJ1C,sB,gBC3CR,SAASI,EAAT,GAAiF,IAAzDC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,kBACnDvE,EAAUqE,EAAVrE,OAEP,OACE,qBACEpB,UAAS,yCAAoC4F,YAAqBxE,GAAzD,4BACPoE,GAAWpE,IAAWG,IAAiB8D,WAAa,cAFxD,SAKE,sBACErF,UAAS,2DACPwF,GAAWpE,IAAWG,IAAiB8D,WAAa,UAFxD,UAKGG,GAAWpE,IAAWG,IAAiB8D,WACtC,8BACE,cAAC,IAAD,CAAUQ,SAAUJ,EAAUI,SAAUC,SAAUL,EAAUK,SAAUjG,MAAO4F,EAAUM,mBAI3F,sBAAK/F,UAAU,sBAAf,UACE,qBAAKA,UAAU,wBAAf,SAAwCyF,EAAUZ,QAClD,cAAC,IAAD,CAAYmB,GAAIP,EAAUO,GAAIC,QAASR,EAAUQ,aAEnD,qBAAKjG,UAAU,yBAAf,SACE,mBAAGA,UAAU,8BAAb,SAA4CyF,EAAUS,gBAGxD,qBAAKlG,UAAU,yBAAf,SACGwF,EACC,cAAC,IAAD,CAAsBpE,OAAQA,EAAQC,WAAYqE,EAAgBpE,aAAcqE,IAEhF,cAAC,EAAD,CAAsBvE,OAAQA,EAAQd,QAASoF,WAwB3DH,EAAc9E,aAAe,CAC3BiF,eAAgB,aAChBC,kBAAmB,aACnBH,SAAS,GAEID,O,iCCxEf,iCAsCeY,IAlCf,YAAgD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,YAAaC,EAAO,EAAPA,KAChCxG,EAAUC,cACVwG,EAAUC,KAAKC,KAAKJ,EAAc,GAClCK,EAAgBL,EAUtB,OARA3D,qBAAU,WACJ0D,EAAO,EACTtG,EAAQS,KAAR,UAAgB+F,EAAhB,YACSF,EAAOG,GAChBzG,EAAQS,KAAR,UAAgB+F,EAAhB,iBAA6BC,MAE9B,CAACzG,EAASyG,EAASH,EAAME,IAG1B,sBAAKtG,UAAU,aAAf,UACE,cAAC,IAAD,CAAM2G,GAAE,UAAKL,EAAL,iBAAkBF,EAAO,GAAKpG,UAAWoG,GAAQ,EAAI,gBAAkB,GAA/E,wBAGA,sCACQA,EADR,OACkBG,EAAS,OAE3B,8BAAIG,EAAJ,qBACA,cAAC,IAAD,CAAMC,GAAE,UAAKL,EAAL,iBAAkBF,EAAO,GAAKpG,UAAWoG,GAAQG,EAAU,gBAAkB,GAArF,6B,oGCvBS,SAASK,EAAuB1E,GAC7C,IAEIE,EAAS,GAmBb,OAlBIF,EAAO2C,MAAMgC,OAAOhE,OCHI,EDI1BT,EAAOyC,MAAP,mCCJ0B,EDI1B,uBACmD,OAA1C3C,EAAO2C,MAAMiC,MALE,wCAMxB1E,EAAOyC,MAAQ,6CAGX3C,EAAO8D,ICRM,GDQS9D,EAAO8D,ICPhB,MDQjB5D,EAAO4D,GAAP,6BCTiB,EDSjB,gBCRiB,MDWb9D,EAAO+D,SCVW,GDUc/D,EAAO+D,SCTrB,MDUtB7D,EAAO6D,QAAP,kCCXsB,EDWtB,gBCVsB,MDapB/D,EAAOgE,YAAYW,OAAOhE,OCZI,KDahCT,EAAO8D,YAAP,yCCbgC,GDahC,wBAGK9D,E,4BEnBT,SAAS2E,EAAT,GAAoF,IAArEC,EAAoE,EAApEA,WAAYC,EAAwD,EAAxDA,UAAWzD,EAA6C,EAA7CA,aAAcV,EAA+B,EAA/BA,aAAcZ,EAAiB,EAAjBA,OAAQE,EAAS,EAATA,OACxE,OACE,uBAAMpC,UAAU,OAAOkH,SAAU1D,EAAjC,UACE,sBAAKxD,UAAU,kBAAf,UACE,cAAC,IAAD,CACE+D,WAAW,QACXD,cAAehB,EACfe,WAAU,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAQ2C,MACpBjB,UAAU,OACVD,QAAQ,QACRK,MAAO5B,EAAOyC,QAEhB,sBAAK7E,UAAU,gBAAf,UACE,cAAC,IAAD,CACE+D,WAAW,cACXD,cAAehB,EACfe,WAAU,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAQ8D,GACpBpC,UAAU,SACVD,QAAQ,KACRK,MAAO5B,EAAO4D,KAEhB,cAAC,IAAD,CACEjC,WAAW,mBACXD,cAAehB,EACfe,WAAU,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAQ+D,QACpBrC,UAAU,SACVD,QAAQ,UACRK,MAAO5B,EAAO6D,aAGlB,cAAC,IAAD,CACElC,WAAW,cACXD,cAAehB,EACfe,WAAU,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAQgE,YACpBtC,UAAU,OACVD,QAAQ,cACRK,MAAO5B,EAAO8D,iBAGlB,qBAAKlG,UAAU,oBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,IAAD,CAAQI,QAAQ,qBAAqBD,MAAM,YAAYE,KAAK,KAAKC,QAAS0G,EAA1E,oBAGA,cAAC,IAAD,CAAQ5G,QAAQ,sBAAsBD,MAAM,YAAYE,KAAK,OAAOgD,KAAK,SAAzE,SACG4D,EAAY,OAAS,gBA2BlCF,EAAKtG,aAAe,CAClB2B,OAAQ,GACRF,OAAQ,IAGK6E,QC1ETI,EAAa,CACjBtC,MAAO,GACPmB,GAAI,EACJC,QAAS,EACTC,YAAa,IAGf,SAASkB,EAAT,GAAwG,IAA9EC,EAA6E,EAA7EA,OAAQC,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,sBAAuBC,EAAsB,EAAtBA,oBACzER,EAAYhC,QAAO,OAACsC,QAAD,IAACA,OAAD,EAACA,EAAkBnE,IAEtCsE,EAAUT,EAAYQ,EAAsBD,EAClD,EAAqD5F,YACnDuF,EACAI,EACAG,EACAd,GAJK1E,EAAP,EAAOA,OAAQY,EAAf,EAAeA,aAAcU,EAA7B,EAA6BA,aAAcpB,EAA3C,EAA2CA,OAO3C,OACE,eAAC,IAAD,CAAOiF,OAAQA,EAAQC,KAAMA,EAA7B,UACE,cAAC,IAAMK,OAAP,UACE,qBAAK3H,UAAU,eAAf,SAA+BiH,EAAY,6BF9B1B,mBE8BiD,6BF7BlD,sBE+BlB,cAAC,IAAMW,KAAP,UACE,cAAC,EAAD,CACEZ,WAAYM,EACZC,iBAAkBA,EAClBE,oBAAqBA,EACrBI,gBAAiBL,EACjBP,UAAWA,EACX7E,OAAQA,EACRF,OAAQA,EACRsB,aAAcA,EACdV,aAAcA,SAqBxBsE,EAAgB3G,aAAe,CAC7B8G,iBAAkBJ,GAGLC,Q,iHCzCAU,EAnBoB,SAAAC,GACjC,IAAMC,EAAcC,cADqB,4CAGzC,WAA+BC,GAA/B,SAAAC,EAAA,+EAEiBC,IAAIC,KAAJ,kBAA4BH,EAAeI,YAAaP,IAFzE,gKAHyC,sBAWzC,OAAOQ,aAXkC,6CAWL,CAClCC,UAAW,SAAAC,GACTT,EAAYU,kBAAkBC,IAAUC,eACxCC,IAAMC,QAAQL,EAAK9I,aCQVoJ,EAtBkB,SAAAhB,GAC/B,IAAMC,EAAcC,cADmB,4CAGvC,WAA6BC,GAA7B,SAAAC,EAAA,+EAEiBC,IAAIY,IAAJ,0BAA2Bd,EAAc9E,IAAM8E,EAAeI,YAAaP,IAF5F,gKAHuC,sBAWvC,OAAOQ,aAXgC,6CAWL,CAChCC,UAAW,SAAAC,GACTI,IAAMC,QAAQL,EAAK9I,SACnBqI,EAAYU,kBAAkBC,IAAUC,gBAE1CK,QAAS,SAAAjF,GACP6E,IAAM7E,MAAMA,EAAMkF,SAAST,KAAK9I,aCKvBwJ,EAtBoB,SAAApB,GACjC,IAAMC,EAAcC,cADqB,4CAGzC,WAA+BC,GAA/B,SAAAC,EAAA,+EAEiBC,IAAIgB,OAAJ,0BAA8BlB,EAAc9E,IAAMkF,YAAaP,IAFhF,gKAHyC,sBAWzC,OAAOQ,aAXkC,6CAWL,CAClCC,UAAW,SAAAC,GACTT,EAAYU,kBAAkBC,IAAUC,eACxCC,IAAMC,QAAQL,EAAK9I,UAErBsJ,QAAS,SAAAjF,GACP6E,IAAM7E,MAAMA,EAAMkF,SAAST,KAAK9I,a,SCiFvB0J,UAxFf,YAAsC,IAARtB,EAAO,EAAPA,KAC5B,EAAuCuB,cAAhCjC,EAAP,EAAOA,OAAQkC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,UAE1B,EAAgDvH,mBAAS,MAAzD,mBAAOsF,EAAP,KAAyBkC,EAAzB,KAEMC,EAAWC,cACXC,EAActG,OAAO,IAAIuG,gBAAgBH,EAASI,QAAQC,IAAI,SAGpE,ECjBa,SAA0BhC,EAAM6B,GAAa,4CAC1D,sBAAAzB,EAAA,sEACeC,IAAI2B,IAAJ,iCAAkCH,EAAlC,mBAJH,GAIoEtB,YAAaP,IAD7F,oFAD0D,sBAK1D,OAAOiC,YAAS,CAACrB,IAAUC,cAAegB,IALiB,WAAD,iCAKgB,CACxEK,kBAAkB,IDgBhBC,CAAiBnC,EAAM6B,GAJzBnB,EADF,EACEA,KACW0B,EAFb,EAEEC,UACSC,EAHX,EAGEC,QACAtG,EAJF,EAIEA,MAIF,EAA6E8D,EAA2BC,GAAzFP,EAAf,EAAO+C,OAA0CC,EAAjD,EAAsCJ,UAGtC,EAAyErB,EAAyBhB,GAAnFN,EAAf,EAAO8C,OAAwCE,EAA/C,EAAoCL,UAGrBM,EAAyBvB,EAA2BpB,GAA5DwC,OAEDI,EAAwB,SAAAlF,GAAS,OAAI,SAAAmF,GACrCnF,GAA2B,SAAdmF,GACfnB,EAAoBhE,GACpB+D,KACS/D,GAA2B,WAAdmF,GACtBF,EAAsBjF,KAe1B,OANA/C,qBAAU,YACJ8H,GAA4BC,IAC9BlB,MAED,CAACA,EAAWiB,EAA0BC,IAErCN,EACK,KAELE,EACK,cAAC,IAAD,CAAkB1K,QAASqE,EAAMkF,SAAST,KAAK9I,UAEnD8I,EAAKoC,eAIR,qCACE,cAAC,IAAD,CAAmBhG,MAAM,aAAaE,QAAS0D,EAAKG,cAAc/F,OAAlE,SACG4F,EAAKG,cAAckC,KAAI,SAAArF,GAAS,OAC/B,cAAC,IAAD,CAEEA,UAAWA,EACXD,SAAO,EACPG,kBAAmBgF,EAAsBlF,IAHpCA,EAAUrC,SAOrB,cAAC,IAAD,CAAYgD,KAAMwD,EAAavD,YAAaoC,EAAKoC,eAAgBvE,KAAK,sBAEtE,cAAC,EAAD,CACEe,OAAQA,EACRC,KAAMiC,EACNhC,iBAAkBA,EAClBC,sBAAuBA,EACvBC,oBAAqBA,IAGvB,qBAAKzH,UAAU,aAAf,SACE,cAAC,IAAD,CAAQG,MAAM,YAAYC,QAAQ,sBAAsBC,KAAK,OAAOC,QA3CnD,WACrBkJ,IACAC,EAAoB,OAyChB,0BAzBG,cAAC,IAAD,CAAkB9J,QAASgB,IAAaE","file":"static/js/7.606e15b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Empty.7e4b6dae.svg\";","export default __webpack_public_path__ + \"static/media/no-image.0b19f0b7.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport Empty from '../assets/imgs/Empty.svg';\r\nimport NoImage from '../assets/imgs/no-image.png';\r\n\r\nimport Button from './button';\r\n\r\nfunction EmptyPlaceholder({message, pathRedirect, image}) {\r\n  const history = useHistory();\r\n\r\n  const handleRedirect = () => {\r\n    history.push(pathRedirect);\r\n  };\r\n\r\n  if (!message) {\r\n    return <img className=\"empty-placeholder__not-available\" src={NoImage} alt=\"placeholder\" />;\r\n  }\r\n  return (\r\n    <div className=\"empty-placeholder\">\r\n      <div className=\"empty-placeholder__content\">\r\n        <img className=\"empty-placeholder__image\" src={image} alt=\"placeholder-img\" />\r\n        <p className=\"empty-placeholder__message\">{message}</p>\r\n        {pathRedirect && (\r\n          <Button color=\"secondary\" variant=\"outlined-secondary\" size=\"lg\" onClick={handleRedirect}>\r\n            Go to available challenges ➡\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEmptyPlaceholder.propTypes = {\r\n  message: PropTypes.string,\r\n  pathRedirect: PropTypes.string,\r\n  image: PropTypes.string\r\n};\r\nEmptyPlaceholder.defaultProps = {\r\n  message: '',\r\n  pathRedirect: '',\r\n  image: Empty\r\n};\r\n\r\nexport default EmptyPlaceholder;\r\n","export const emptyMessage = {\r\n  overviewPage: 'Sorry... You have no challenge in progress or completed 😔',\r\n  challengesPage: 'Sorry... You have no challenge available 😔',\r\n  shopPage: 'Sorry... You have no challenge available 😔',\r\n  shopPageAdmin: 'Oups...you have to add some products, for that press add new button',\r\n  validationPage: 'Oups... you have no challenge to validate.',\r\n  welcome: 'Welcome to Gamify',\r\n  notFound: 'Page not found 😓'\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {statusDictionary} from '../utils';\r\n\r\nimport Button from './button';\r\n\r\nfunction ButtonContainerAdmin({status, onValidate, onUpdateItem}) {\r\n  return status === 'inPending' ? (\r\n    <>\r\n      <Button color=\"fourth\" variant=\"outlined-fourth\" size=\"sm\" onClick={() => onValidate(statusDictionary.denied)}>\r\n        Deny\r\n      </Button>\r\n      <Button\r\n        color=\"tertiary\"\r\n        variant=\"contained-tertiary\"\r\n        size=\"md\"\r\n        onClick={() => onValidate(statusDictionary.validated)}\r\n      >\r\n        Validate\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <Button color=\"secondary\" variant=\"outlined-secondary\" size=\"sm\" onClick={() => onUpdateItem('DELETE')}>\r\n        Delete\r\n      </Button>\r\n      <Button color=\"secondary\" variant=\"contained-secondary\" size=\"md\" onClick={() => onUpdateItem('EDIT')}>\r\n        Edit\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nButtonContainerAdmin.propTypes = {\r\n  status: PropTypes.string,\r\n  onValidate: PropTypes.func,\r\n  onUpdateItem: PropTypes.func\r\n};\r\n\r\nButtonContainerAdmin.defaultProps = {\r\n  onValidate: PropTypes.func,\r\n  onUpdateItem: PropTypes.func,\r\n  status: ''\r\n};\r\nexport default ButtonContainerAdmin;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nexport const useForm = (initialState, currentState, onSubmitCallback, validate) => {\r\n  const [fields, setFields] = useState();\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setFields(initialState);\r\n  }, [initialState]);\r\n\r\n  useEffect(() => {\r\n    if (!Object.keys(errors).length && isSubmitting) {\r\n      onSubmitCallback(fields);\r\n      resetForm();\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [errors, fields, isSubmitting, onSubmitCallback, resetForm]);\r\n\r\n  useEffect(() => {\r\n    setFields(currentState);\r\n  }, [currentState]);\r\n\r\n  const handleChange = useCallback((e, fieldName, fieldValue) => {\r\n    let {value} = e.target;\r\n    const {id, type} = e.target;\r\n\r\n    if (type === 'number') {\r\n      value = Number(value);\r\n    }\r\n    setFields(prevState => ({\r\n      ...prevState,\r\n      [id]: value,\r\n      ...(fieldName && {[fieldName]: fieldValue})\r\n    }));\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      setIsSubmitting(true);\r\n      setErrors(validate(fields));\r\n    },\r\n    [fields, validate]\r\n  );\r\n\r\n  return {\r\n    fields,\r\n    handleChange,\r\n    resetForm,\r\n    handleSubmit,\r\n    errors\r\n  };\r\n};\r\n","import React from 'react';\r\nimport FileBase from 'react-file-base64';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Input({inputId, inputType, inputValue, inputOnChange, inputLabel, error, isRequired, className}) {\r\n  return (\r\n    <div className=\"form-group__container\">\r\n      <div className=\"form-group\">\r\n        {inputType === 'file' ? (\r\n          <>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({base64, file}) =>\r\n                inputOnChange('profilePicture', {\r\n                  ...inputValue,\r\n                  url: base64,\r\n                  file: file.name\r\n                })\r\n              }\r\n            />\r\n            <label className=\"label-input-file\" htmlFor={inputId}>\r\n              <span>{inputLabel}</span>\r\n            </label>\r\n            <span className=\"label-input-file__file\">{inputValue.file}</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className={`form-group__input ${className}`}\r\n              id={inputId}\r\n              type={inputType}\r\n              value={inputValue}\r\n              onChange={inputOnChange}\r\n              required={isRequired}\r\n              placeholder=\"placeholder\"\r\n            />\r\n            <label className=\"form-group__label\" htmlFor={inputId}>\r\n              <span className=\"content\">{inputLabel}</span>\r\n            </label>\r\n          </>\r\n        )}\r\n      </div>\r\n      {error && <span className=\"form-group__error\">{error}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  error: PropTypes.string,\r\n  inputId: PropTypes.string.isRequired,\r\n  inputLabel: PropTypes.string.isRequired,\r\n  inputType: PropTypes.string.isRequired,\r\n  inputValue: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  inputOnChange: PropTypes.func.isRequired,\r\n  isRequired: PropTypes.bool\r\n};\r\n\r\nInput.defaultProps = {\r\n  error: '',\r\n  inputValue: '',\r\n  className: '',\r\n  isRequired: true\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ChallengesSection({title, isScrollable, hasData, children}) {\r\n  return (\r\n    Boolean(hasData) && (\r\n      <section className=\"challenges-section\">\r\n        <h2 className=\"challenges-section__title\">{title}</h2>\r\n        <div className={`challenges-section__items challenges-section__items--${isScrollable && 'scrollable'}`}>\r\n          {children}\r\n        </div>\r\n      </section>\r\n    )\r\n  );\r\n}\r\n\r\nChallengesSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  isScrollable: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n  hasData: PropTypes.number.isRequired\r\n};\r\n\r\nChallengesSection.defaultProps = {\r\n  isScrollable: false\r\n};\r\n\r\nexport default ChallengesSection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {statusDictionary} from '../utils';\r\n\r\nimport Button from './button';\r\n\r\nfunction ButtonsContainerUser({status, onClick}) {\r\n  switch (status) {\r\n    case statusDictionary.inProgress:\r\n      return (\r\n        <>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"outlined-secondary\"\r\n            size=\"sm\"\r\n            onClick={() => onClick(statusDictionary.available)}\r\n          >\r\n            Quit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained-secondary\"\r\n            size=\"md\"\r\n            onClick={() => onClick(statusDictionary.inPending)}\r\n          >\r\n            Complete\r\n          </Button>\r\n        </>\r\n      );\r\n\r\n    case statusDictionary.inPending:\r\n      return (\r\n        <Button size=\"lg\" disabled>\r\n          Pending ...\r\n        </Button>\r\n      );\r\n\r\n    case statusDictionary.validated:\r\n      return (\r\n        <Button color=\"tertiary\" size=\"lg\" disabled>\r\n          Validated\r\n        </Button>\r\n      );\r\n\r\n    case statusDictionary.denied:\r\n      return (\r\n        <Button color=\"fourth\" size=\"lg\" disabled>\r\n          Denied\r\n        </Button>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained-secondary\"\r\n          size=\"lg\"\r\n          onClick={() => onClick(statusDictionary.inProgress)}\r\n        >\r\n          Enroll\r\n        </Button>\r\n      );\r\n  }\r\n}\r\n\r\nButtonsContainerUser.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ButtonsContainerUser;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {camelCaseToKebabCase} from '../utils';\r\nimport {statusDictionary} from '../mocks/fixtures';\r\n\r\nimport ButtonContainerAdmin from './button-container-admin';\r\nimport ButtonsContainerUser from './button-container-user';\r\nimport RewardInfo from './reward-info';\r\nimport UserCard from './user-card';\r\n\r\nfunction ChallengeCard({isAdmin, challenge, onChangeStatus, onUpdateChallenge}) {\r\n  const {status} = challenge;\r\n\r\n  return (\r\n    <div\r\n      className={`challenge-card challenge-card--${camelCaseToKebabCase(status)} challenge-card--${\r\n        isAdmin && status === statusDictionary.inPending && 'validation'\r\n      }`}\r\n    >\r\n      <div\r\n        className={`challenge-card__content challenge-card__content--${\r\n          isAdmin && status === statusDictionary.inPending && 'extend'\r\n        }`}\r\n      >\r\n        {isAdmin && status === statusDictionary.inPending && (\r\n          <div>\r\n            <UserCard userName={challenge.userName} jobTitle={challenge.jobTitle} image={challenge.profilePicture} />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"challenge-card__top\">\r\n          <div className=\"challenge-card__title\">{challenge.title}</div>\r\n          <RewardInfo xp={challenge.xp} credits={challenge.credits} />\r\n        </div>\r\n        <div className=\"challenge-card__middle\">\r\n          <p className=\"challenge-card__description\">{challenge.description}</p>\r\n        </div>\r\n\r\n        <div className=\"challenge-card__bottom\">\r\n          {isAdmin ? (\r\n            <ButtonContainerAdmin status={status} onValidate={onChangeStatus} onUpdateItem={onUpdateChallenge} />\r\n          ) : (\r\n            <ButtonsContainerUser status={status} onClick={onChangeStatus} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nChallengeCard.propTypes = {\r\n  onChangeStatus: PropTypes.func,\r\n  onUpdateChallenge: PropTypes.func,\r\n  challenge: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    credits: PropTypes.number,\r\n    status: PropTypes.string,\r\n    jobTitle: PropTypes.string,\r\n    userName: PropTypes.string,\r\n    profilePicture: PropTypes.string,\r\n    id: PropTypes.string,\r\n    xp: PropTypes.number\r\n  }).isRequired,\r\n  isAdmin: PropTypes.bool\r\n};\r\nChallengeCard.defaultProps = {\r\n  onChangeStatus: () => {},\r\n  onUpdateChallenge: () => {},\r\n  isAdmin: false\r\n};\r\nexport default ChallengeCard;\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nfunction Pagination({page, itemsLength, path}) {\r\n  const history = useHistory();\r\n  const nrPages = Math.ceil(itemsLength / 6);\r\n  const totalProducts = itemsLength;\r\n\r\n  useEffect(() => {\r\n    if (page < 1) {\r\n      history.push(`${path}?page=1`);\r\n    } else if (page > nrPages) {\r\n      history.push(`${path}?page=${nrPages}`);\r\n    }\r\n  }, [history, nrPages, page, path]);\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <Link to={`${path}?page=${page - 1}`} className={page <= 1 ? 'link-disabled' : ''}>\r\n        ⬅Prev\r\n      </Link>\r\n      <p>\r\n        Page {page} of {nrPages}{' '}\r\n      </p>\r\n      <p>{totalProducts} Products Total</p>\r\n      <Link to={`${path}?page=${page + 1}`} className={page >= nrPages ? 'link-disabled' : ''}>\r\n        Next➡\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  itemsLength: PropTypes.number.isRequired,\r\n  path: PropTypes.string.isRequired\r\n};\r\nexport default Pagination;\r\n","import {descriptionMinLength, maxCredits, maxXp, minCredits, minXp, titleMinLength} from '../constants/form-challenges';\r\n\r\n/* eslint-disable prefer-const */\r\nexport default function validateChallengesForm(fields) {\r\n  const specialCharacters = /[!\"#$%*<>?^~§©®°¶]+/;\r\n\r\n  let errors = {};\r\n  if (fields.title.trim().length < titleMinLength) {\r\n    errors.title = `Please lengthen title to ${titleMinLength} characters or more`;\r\n  } else if (fields.title.match(specialCharacters) !== null) {\r\n    errors.title = 'Remove special characters from the title.';\r\n  }\r\n\r\n  if (!(fields.xp >= minXp && fields.xp <= maxXp)) {\r\n    errors.xp = `XP must be between ${minXp} and ${maxXp}`;\r\n  }\r\n\r\n  if (!(fields.credits >= minCredits && fields.credits <= maxCredits)) {\r\n    errors.credits = `Credits must be between ${minCredits} and ${maxCredits}`;\r\n  }\r\n\r\n  if (fields.description.trim().length < descriptionMinLength) {\r\n    errors.description = `Please lengthen description to ${descriptionMinLength} characters or more`;\r\n  }\r\n\r\n  return errors;\r\n}\r\n","export const editTitle = 'Edit challenge';\r\nexport const addTitle = 'Add challenge';\r\n\r\n// validation helpers\r\nexport const titleMinLength = 6;\r\nexport const minXp = 1;\r\nexport const maxXp = 200;\r\nexport const minCredits = 1;\r\nexport const maxCredits = 200;\r\nexport const descriptionMinLength = 10;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from './input';\r\nimport Button from './button';\r\n\r\nfunction Form({closeModal, isEditing, handleSubmit, handleChange, fields, errors}) {\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <div className=\"form__container\">\r\n        <Input\r\n          inputLabel=\"Title\"\r\n          inputOnChange={handleChange}\r\n          inputValue={fields?.title}\r\n          inputType=\"text\"\r\n          inputId=\"title\"\r\n          error={errors.title}\r\n        />\r\n        <div className=\"form__wrapper\">\r\n          <Input\r\n            inputLabel=\"XP (number)\"\r\n            inputOnChange={handleChange}\r\n            inputValue={fields?.xp}\r\n            inputType=\"number\"\r\n            inputId=\"xp\"\r\n            error={errors.xp}\r\n          />\r\n          <Input\r\n            inputLabel=\"Credits (number)\"\r\n            inputOnChange={handleChange}\r\n            inputValue={fields?.credits}\r\n            inputType=\"number\"\r\n            inputId=\"credits\"\r\n            error={errors.credits}\r\n          />\r\n        </div>\r\n        <Input\r\n          inputLabel=\"Description\"\r\n          inputOnChange={handleChange}\r\n          inputValue={fields?.description}\r\n          inputType=\"text\"\r\n          inputId=\"description\"\r\n          error={errors.description}\r\n        />\r\n      </div>\r\n      <div className=\"buttons-container\">\r\n        <div className=\"buttons-container__wrapper\">\r\n          <Button variant=\"outlined-secondary\" color=\"secondary\" size=\"sm\" onClick={closeModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained-secondary\" color=\"secondary\" size=\"sm-1\" type=\"submit\">\r\n            {isEditing ? 'Edit' : 'Add'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  isEditing: PropTypes.bool.isRequired,\r\n  errors: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    xp: PropTypes.number,\r\n    credits: PropTypes.number,\r\n    description: PropTypes.string\r\n  }),\r\n  fields: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    xp: PropTypes.number,\r\n    credits: PropTypes.number,\r\n    description: PropTypes.string\r\n  })\r\n};\r\n\r\nForm.defaultProps = {\r\n  errors: {},\r\n  fields: {}\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport {useForm} from '../hooks/use-form';\r\nimport validateChallengesForm from '../utils/form-rules-challenges';\r\nimport {addTitle, editTitle} from '../constants/form-challenges';\r\n\r\nimport Modal from './modal/modal';\r\nimport Form from './add-or-edit-form';\r\n\r\nconst emptyState = {\r\n  title: '',\r\n  xp: 0,\r\n  credits: 0,\r\n  description: ''\r\n};\r\n\r\nfunction ChallengesModal({isOpen, hide, currentChallenge, handleAddNewChallenge, handleEditChallenge}) {\r\n  const isEditing = Boolean(currentChallenge?.id);\r\n\r\n  const handler = isEditing ? handleEditChallenge : handleAddNewChallenge;\r\n  const {fields, handleChange, handleSubmit, errors} = useForm(\r\n    emptyState,\r\n    currentChallenge,\r\n    handler,\r\n    validateChallengesForm\r\n  );\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} hide={hide}>\r\n      <Modal.Header>\r\n        <div className=\"modal__title\">{isEditing ? <h1>{editTitle}</h1> : <h1>{addTitle}</h1>}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          closeModal={hide}\r\n          currentChallenge={currentChallenge}\r\n          handleEditChallenge={handleEditChallenge}\r\n          addNewChallenge={handleAddNewChallenge}\r\n          isEditing={isEditing}\r\n          errors={errors}\r\n          fields={fields}\r\n          handleSubmit={handleSubmit}\r\n          handleChange={handleChange}\r\n        />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nChallengesModal.propTypes = {\r\n  handleAddNewChallenge: PropTypes.func.isRequired,\r\n  handleEditChallenge: PropTypes.func.isRequired,\r\n  hide: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  currentChallenge: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    xp: PropTypes.number,\r\n    credits: PropTypes.number,\r\n    description: PropTypes.string,\r\n    id: PropTypes.number\r\n  })\r\n};\r\n\r\nChallengesModal.defaultProps = {\r\n  currentChallenge: emptyState\r\n};\r\n\r\nexport default ChallengesModal;\r\n","import {useMutation, useQueryClient} from 'react-query';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport {getJWTHeader} from '../../axios-instance';\r\nimport api from '../../components/api';\r\nimport {queryKeys} from '../../react-query/constants';\r\n\r\nconst useCreateChallengeMutation = user => {\r\n  const queryClient = useQueryClient();\r\n\r\n  async function createChallenge(challengeData) {\r\n    try {\r\n      return await api.post(`/api/challenges`, challengeData, getJWTHeader(user));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  return useMutation(createChallenge, {\r\n    onSuccess: data => {\r\n      queryClient.invalidateQueries(queryKeys.allChallenges);\r\n      toast.success(data.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport default useCreateChallengeMutation;\r\n","import {useMutation, useQueryClient} from 'react-query';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport {getJWTHeader} from '../../axios-instance';\r\nimport api from '../../components/api';\r\nimport {queryKeys} from '../../react-query/constants';\r\n\r\nconst useEditChallengeMutation = user => {\r\n  const queryClient = useQueryClient();\r\n\r\n  async function editChallenge(challengeData) {\r\n    try {\r\n      return await api.put(`/api/challenges/${challengeData.id}`, challengeData, getJWTHeader(user));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  return useMutation(editChallenge, {\r\n    onSuccess: data => {\r\n      toast.success(data.message);\r\n      queryClient.invalidateQueries(queryKeys.allChallenges);\r\n    },\r\n    onError: error => {\r\n      toast.error(error.response.data.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport default useEditChallengeMutation;\r\n","import {useMutation, useQueryClient} from 'react-query';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport {getJWTHeader} from '../../axios-instance';\r\nimport api from '../../components/api';\r\nimport {queryKeys} from '../../react-query/constants';\r\n\r\nconst useDeleteChallengeMutation = user => {\r\n  const queryClient = useQueryClient();\r\n\r\n  async function deleteChallenge(challengeData) {\r\n    try {\r\n      return await api.delete(`/api/challenges/${challengeData.id}`, getJWTHeader(user));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  return useMutation(deleteChallenge, {\r\n    onSuccess: data => {\r\n      queryClient.invalidateQueries(queryKeys.allChallenges);\r\n      toast.success(data.message);\r\n    },\r\n    onError: error => {\r\n      toast.error(error.response.data.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport default useDeleteChallengeMutation;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../../components/button';\r\nimport ChallengesSection from '../../components/challenges-section';\r\nimport useModal from '../../hooks/use-modal';\r\nimport ChallengesModal from '../../components/challenges-modal';\r\nimport EmptyPlaceholder from '../../components/empty-placeholder';\r\nimport useAllChallenges from '../../hooks/queries/use-all-challenges';\r\nimport Pagination from '../../components/pagination';\r\nimport ChallengeCard from '../../components/challenge-card';\r\nimport useCreateChallengeMutation from '../../hooks/mutations/use-create-challenge-mutation';\r\nimport useEditChallengeMutation from '../../hooks/mutations/use-edit-challenge-mutation';\r\nimport useDeleteChallengeMutation from '../../hooks/mutations/use-delete-challenge-mutation';\r\nimport {emptyMessage} from '../../constants/messages';\r\n\r\nfunction ChallengesPageAdmin({user}) {\r\n  const {isOpen, hideModal, showModal} = useModal();\r\n\r\n  const [currentChallenge, setCurrentChallenge] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const currentPage = Number(new URLSearchParams(location.search).get('page'));\r\n\r\n  // query: get all challenges paginated\r\n  const {\r\n    data,\r\n    isLoading: isLoadingGetChallenges,\r\n    isError: isErrorGetChallenges,\r\n    error\r\n  } = useAllChallenges(user, currentPage);\r\n\r\n  // create new challenge mutation\r\n  const {mutate: handleAddNewChallenge, isLoading: isLoadingCreateChallenge} = useCreateChallengeMutation(user);\r\n\r\n  // edit  challenge mutation\r\n  const {mutate: handleEditChallenge, isLoading: isLoadingEditChallenge} = useEditChallengeMutation(user);\r\n\r\n  // delete challenge mutation\r\n  const {mutate: handleDeleteChallenge} = useDeleteChallengeMutation(user);\r\n\r\n  const handleUpdateChallenge = challenge => operation => {\r\n    if (challenge && operation === 'EDIT') {\r\n      setCurrentChallenge(challenge);\r\n      showModal();\r\n    } else if (challenge && operation === 'DELETE') {\r\n      handleDeleteChallenge(challenge);\r\n    }\r\n  };\r\n\r\n  const handleOnCreate = () => {\r\n    showModal();\r\n    setCurrentChallenge(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingCreateChallenge || isLoadingEditChallenge) {\r\n      hideModal();\r\n    }\r\n  }, [hideModal, isLoadingCreateChallenge, isLoadingEditChallenge]);\r\n\r\n  if (isLoadingGetChallenges) {\r\n    return null;\r\n  }\r\n  if (isErrorGetChallenges) {\r\n    return <EmptyPlaceholder message={error.response.data.message} />;\r\n  }\r\n  if (!data.totalAvailable) {\r\n    return <EmptyPlaceholder message={emptyMessage.challengesPage} />;\r\n  }\r\n  return (\r\n    <>\r\n      <ChallengesSection title=\"Challenges\" hasData={data.allChallenges.length}>\r\n        {data.allChallenges.map(challenge => (\r\n          <ChallengeCard\r\n            key={challenge.id}\r\n            challenge={challenge}\r\n            isAdmin\r\n            onUpdateChallenge={handleUpdateChallenge(challenge)}\r\n          />\r\n        ))}\r\n      </ChallengesSection>\r\n      <Pagination page={currentPage} itemsLength={data.totalAvailable} path=\"/admin/challenges\" />\r\n\r\n      <ChallengesModal\r\n        isOpen={isOpen}\r\n        hide={hideModal}\r\n        currentChallenge={currentChallenge}\r\n        handleAddNewChallenge={handleAddNewChallenge}\r\n        handleEditChallenge={handleEditChallenge}\r\n      />\r\n\r\n      <div className=\"add-button\">\r\n        <Button color=\"secondary\" variant=\"contained-secondary\" size=\"sm-1\" onClick={handleOnCreate}>\r\n          Add new\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nChallengesPageAdmin.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\nexport default ChallengesPageAdmin;\r\n","/* eslint-disable no-return-await */\r\nimport {useQuery} from 'react-query';\r\n\r\nimport {getJWTHeader} from '../../axios-instance';\r\nimport api from '../../components/api';\r\nimport {queryKeys} from '../../react-query/constants';\r\n\r\nconst limit = 6;\r\n\r\nexport default function useAllChallenges(user, currentPage) {\r\n  async function getAllChallenges() {\r\n    return await api.get(`/api/challenges/?_page=${currentPage}&_limit=${limit}`, getJWTHeader(user));\r\n  }\r\n\r\n  return useQuery([queryKeys.allChallenges, currentPage], getAllChallenges, {\r\n    keepPreviousData: true\r\n  });\r\n}\r\n"],"sourceRoot":""}